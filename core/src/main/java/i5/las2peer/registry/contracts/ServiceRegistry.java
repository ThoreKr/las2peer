package i5.las2peer.registry.contracts;

import io.reactivex.Flowable;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicBytes;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Bytes32;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple2;
import org.web3j.tuples.generated.Tuple3;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.5.5.
 */
@SuppressWarnings("rawtypes")
public class ServiceRegistry extends Contract {
    private static final String BINARY = "0x608060405234801561001057600080fd5b50604051602080612acf8339810180604052602081101561003057600080fd5b8101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050612a3e806100916000396000f3fe6080604052600436106100c5576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630a790eb7146100ca5780630b0e7f15146101855780630cbc2a151461026157806317c523d4146103ea57806335341fb4146104ca5780635c7460d614610531578063656afdee14610588578063bddbd3a71461065a578063daf7b1551461086e578063df975418146109eb578063e193070014610a9f578063ea23ea2b14610c26578063fc11259714610e65575b600080fd5b3480156100d657600080fd5b50610103600480360360208110156100ed57600080fd5b8101908080359060200190929190505050610fe2565b6040518080602001838152602001828103825284818151815260200191508051906020019080838360005b8381101561014957808201518184015260208101905061012e565b50505050905090810190601f1680156101765780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b34801561019157600080fd5b5061024b600480360360208110156101a857600080fd5b81019080803590602001906401000000008111156101c557600080fd5b8201836020820111156101d757600080fd5b803590602001918460018302840111640100000000831117156101f957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061109e565b6040518082815260200191505060405180910390f35b34801561026d57600080fd5b506103e86004803603608081101561028457600080fd5b81019080803590602001906401000000008111156102a157600080fd5b8201836020820111156102b357600080fd5b803590602001918460018302840111640100000000831117156102d557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561036257600080fd5b82018360208201111561037457600080fd5b8035906020019184600183028401116401000000008311171561039657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061111b565b005b3480156103f657600080fd5b506104b06004803603602081101561040d57600080fd5b810190808035906020019064010000000081111561042a57600080fd5b82018360208201111561043c57600080fd5b8035906020019184600183028401116401000000008311171561045e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611585565b604051808215151515815260200191505060405180910390f35b3480156104d657600080fd5b5061050d600480360360408110156104ed57600080fd5b8101908080359060200190929190803590602001909291905050506115b2565b60405180848152602001838152602001828152602001935050505060405180910390f35b34801561053d57600080fd5b506105466115f8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561059457600080fd5b50610658600480360360408110156105ab57600080fd5b81019080803590602001906401000000008111156105c857600080fd5b8201836020820111156105da57600080fd5b803590602001918460018302840111640100000000831117156105fc57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919050505061161d565b005b34801561066657600080fd5b5061086c600480360360c081101561067d57600080fd5b810190808035906020019064010000000081111561069a57600080fd5b8201836020820111156106ac57600080fd5b803590602001918460018302840111640100000000831117156106ce57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561073157600080fd5b82018360208201111561074357600080fd5b8035906020019184600183028401116401000000008311171561076557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001909291908035906020019092919080359060200190929190803590602001906401000000008111156107e657600080fd5b8201836020820111156107f857600080fd5b8035906020019184600183028401116401000000008311171561081a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506117c2565b005b34801561087a57600080fd5b506109e9600480360360a081101561089157600080fd5b81019080803590602001906401000000008111156108ae57600080fd5b8201836020820111156108c057600080fd5b803590602001918460018302840111640100000000831117156108e257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919080359060200190929190803590602001909291908035906020019064010000000081111561096357600080fd5b82018360208201111561097557600080fd5b8035906020019184600183028401116401000000008311171561099757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061199e565b005b3480156109f757600080fd5b50610a2460048036036020811015610a0e57600080fd5b8101908080359060200190929190505050611b0c565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610a64578082015181840152602081019050610a49565b50505050905090810190601f168015610a915780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610aab57600080fd5b50610c24600480360360c0811015610ac257600080fd5b8101908080359060200190640100000000811115610adf57600080fd5b820183602082011115610af157600080fd5b80359060200191846001830284011164010000000083111715610b1357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190640100000000811115610b9e57600080fd5b820183602082011115610bb057600080fd5b80359060200191846001830284011164010000000083111715610bd257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611bc4565b005b348015610c3257600080fd5b50610e636004803603610100811015610c4a57600080fd5b8101908080359060200190640100000000811115610c6757600080fd5b820183602082011115610c7957600080fd5b80359060200191846001830284011164010000000083111715610c9b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190640100000000811115610d2657600080fd5b820183602082011115610d3857600080fd5b80359060200191846001830284011164010000000083111715610d5a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190640100000000811115610ddd57600080fd5b820183602082011115610def57600080fd5b80359060200191846001830284011164010000000083111715610e1157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611d71565b005b348015610e7157600080fd5b50610fe0600480360360a0811015610e8857600080fd5b8101908080359060200190640100000000811115610ea557600080fd5b820183602082011115610eb757600080fd5b80359060200191846001830284011164010000000083111715610ed957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190803590602001909291908035906020019092919080359060200190640100000000811115610f5a57600080fd5b820183602082011115610f6c57600080fd5b80359060200191846001830284011164010000000083111715610f8e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612268565b005b6001602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561108e5780601f106110635761010080835404028352916020019161108e565b820191906000526020600020905b81548152906001019060200180831161107157829003601f168201915b5050505050908060010154905082565b6000816040516020018082805190602001908083835b6020831015156110d957805182526020820191506020810190506020830392506110b4565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001209050919050565b60606040805190810160405280600481526020017f656afdee000000000000000000000000000000000000000000000000000000008152509050606085856040516020018080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156111a2578082015181840152602081019050611187565b50505050905090810190601f1680156111cf5780820380516001836020036101000a031916815260200191505b509350505050604051602081830303815290604052905073__Delegation____________________________63a491459d838387876040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001806020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001848103845288818151815260200191508051906020019080838360005b838110156112a957808201518184015260208101905061128e565b50505050905090810190601f1680156112d65780820380516001836020036101000a031916815260200191505b50848103835287818151815260200191508051906020019080838360005b8381101561130f5780820151818401526020810190506112f4565b50505050905090810190601f16801561133c5780820380516001836020036101000a031916815260200191505b50848103825285818151815260200191508051906020019080838360005b8381101561137557808201518184015260208101905061135a565b50505050905090810190601f1680156113a25780820380516001836020036101000a031916815260200191505b5097505050505050505060006040518083038186803b1580156113c457600080fd5b505af41580156113d8573d6000803e3d6000fd5b505050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e96b462a85876040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060206040518083038186803b15801561149e57600080fd5b505afa1580156114b2573d6000803e3d6000fd5b505050506040513d60208110156114c857600080fd5b81019080805190602001909291905050501515611573576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001807f5369676e6572206d757374206f776e20617574686f72206e616d6520746f207281526020017f6567697374657220736572766963652e0000000000000000000000000000000081525060400191505060405180910390fd5b61157d86866123d6565b505050505050565b600080600102600160006115988561109e565b815260200190815260200160002060010154149050919050565b6002602052816000526040600020818154811015156115cd57fe5b9060005260206000209060030201600091509150508060000154908060010154908060020154905083565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e96b462a33836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060206040518083038186803b1580156116df57600080fd5b505afa1580156116f3573d6000803e3d6000fd5b505050506040513d602081101561170957600080fd5b810190808051906020019092919050505015156117b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001807f53656e646572206d757374206f776e20617574686f72206e616d6520746f207281526020017f6567697374657220736572766963652e0000000000000000000000000000000081525060400191505060405180910390fd5b6117be82826123d6565b5050565b856000600102600160006117d58461109e565b8152602001908152602001600020600101541415151561185d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f53657276696365206d75737420626520726567697374657265642e000000000081525060200191505060405180910390fd5b60006118688861109e565b9050807f488efddc026b80be7290e78ebae8f6804d46e82cf6cbb8fce219d6f1239ed9e3888888888842604051808060200187815260200186815260200185815260200180602001848152602001838103835289818151815260200191508051906020019080838360005b838110156118ee5780820151818401526020810190506118d3565b50505050905090810190601f16801561191b5780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b83811015611954578082015181840152602081019050611939565b50505050905090810190601f1680156119815780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390a25050505050505050565b846000600102600160006119b18461109e565b81526020019081526020016000206001015414151515611a39576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f53657276696365206d75737420626520726567697374657265642e000000000081525060200191505060405180910390fd5b6000611a448761109e565b9050807f40f7f78f4da5ac433d91a5d250c56421d65e368aa5aa0a58a85cd82b8c3a9e3787878787426040518086815260200185815260200184815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b83811015611ac5578082015181840152602081019050611aaa565b50505050905090810190601f168015611af25780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a250505050505050565b6060600160008381526020019081526020016000206000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611bb85780601f10611b8d57610100808354040283529160200191611bb8565b820191906000526020600020905b815481529060010190602001808311611b9b57829003601f168201915b50505050509050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e96b462a33876040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060206040518083038186803b158015611c8657600080fd5b505afa158015611c9a573d6000803e3d6000fd5b505050506040513d6020811015611cb057600080fd5b81019080805190602001909291905050501515611d5b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001807f53656e646572206d757374206f776e20617574686f72206e616d6520746f207281526020017f656c656173652e0000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b611d6986868686868661262e565b505050505050565b60606040805190810160405280600481526020017fe19307000000000000000000000000000000000000000000000000000000000081525090506060898989898989604051602001808060200187815260200186815260200185815260200184815260200180602001838103835289818151815260200191508051906020019080838360005b83811015611e12578082015181840152602081019050611df7565b50505050905090810190601f168015611e3f5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015611e78578082015181840152602081019050611e5d565b50505050905090810190601f168015611ea55780820380516001836020036101000a031916815260200191505b5098505050505050505050604051602081830303815290604052905073__Delegation____________________________63a491459d838387876040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001806020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001848103845288818151815260200191508051906020019080838360005b83811015611f84578082015181840152602081019050611f69565b50505050905090810190601f168015611fb15780820380516001836020036101000a031916815260200191505b50848103835287818151815260200191508051906020019080838360005b83811015611fea578082015181840152602081019050611fcf565b50505050905090810190601f1680156120175780820380516001836020036101000a031916815260200191505b50848103825285818151815260200191508051906020019080838360005b83811015612050578082015181840152602081019050612035565b50505050905090810190601f16801561207d5780820380516001836020036101000a031916815260200191505b5097505050505050505060006040518083038186803b15801561209f57600080fd5b505af41580156120b3573d6000803e3d6000fd5b505050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e96b462a858b6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060206040518083038186803b15801561217957600080fd5b505afa15801561218d573d6000803e3d6000fd5b505050506040513d60208110156121a357600080fd5b8101908080519060200190929190505050151561224e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001807f5369676e6572206d757374206f776e20617574686f72206e616d6520746f207281526020017f656c656173652e0000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b61225c8a8a8a8a8a8a61262e565b50505050505050505050565b8460006001026001600061227b8461109e565b81526020019081526020016000206001015414151515612303576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f53657276696365206d75737420626520726567697374657265642e000000000081525060200191505060405180910390fd5b600061230e8761109e565b9050807f089ca97bc3af3dbd5ecd2de03a33a4c46580fe27362eb41b38988a8f58082db687878787426040518086815260200185815260200184815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b8381101561238f578082015181840152602081019050612374565b50505050905090810190601f1680156123bc5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a250505050505050565b816123f0602060405190810160405280600081525061109e565b6123f98261109e565b1415151561246f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f537472696e67206d757374206265206e6f6e2d7a65726f2e000000000000000081525060200191505060405180910390fd5b8160006001028114151515612512576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f576861746576657220746869732069732c206974206d757374206265206e6f6e81526020017f2d7a65726f2e000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b61251b84611585565b151561258f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f53657276696365206e616d6520616c72656164792074616b656e2e000000000081525060200191505060405180910390fd5b600061259a8561109e565b90506040805190810160405280868152602001858152506001600083815260200190815260200160002060008201518160000190805190602001906125e092919061296d565b506020820151816001015590505083817fdbcd7b865e4bbd2885b269251a7a2ac22db95d1479bdba1ebffdd9b0f14c1f15426040518082815260200191505060405180910390a35050505050565b85612648602060405190810160405280600081525061109e565b6126518261109e565b141515156126c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f537472696e67206d757374206265206e6f6e2d7a65726f2e000000000000000081525060200191505060405180910390fd5b856000600102811415151561276a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f576861746576657220746869732069732c206974206d757374206265206e6f6e81526020017f2d7a65726f2e000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60006127758961109e565b905087600160008381526020019081526020016000206001015414151561282a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f50617373656420617574686f7220646f6573206e6f74206f776e20736572766981526020017f63652e000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600260008281526020019081526020016000206060604051908101604052808981526020018881526020018781525090806001815401808255809150509060018203906000526020600020906003020160009091929091909150600082015181600001556020820151816001015560408201518160020155505050807ffe3ffc15bade6f3ec6539c01fd0de509fd35fea0b61cee9c50a2988abb22c76f88888888426040518086815260200185815260200184815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b83811015612924578082015181840152602081019050612909565b50505050905090810190601f1680156129515780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a2505050505050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106129ae57805160ff19168380011785556129dc565b828001600101855582156129dc579182015b828111156129db5782518255916020019190600101906129c0565b5b5090506129e991906129ed565b5090565b612a0f91905b80821115612a0b5760008160009055506001016129f3565b5090565b9056fea165627a7a72305820748d6d20be07b78ea25847a121eec14cdb4d5be74317235db1f6bf989b7853c00029";

    public static final String FUNC_SERVICES = "services";

    public static final String FUNC_SERVICEVERSIONS = "serviceVersions";

    public static final String FUNC_USERREGISTRY = "userRegistry";

    public static final String FUNC_STRINGHASH = "stringHash";

    public static final String FUNC_NAMEISAVAILABLE = "nameIsAvailable";

    public static final String FUNC_HASHTONAME = "hashToName";

    public static final String FUNC_REGISTER = "register";

    public static final String FUNC_DELEGATEDREGISTER = "delegatedRegister";

    public static final String FUNC_RELEASE = "release";

    public static final String FUNC_DELEGATEDRELEASE = "delegatedRelease";

    public static final String FUNC_ANNOUNCEDEPLOYMENT = "announceDeployment";

    public static final String FUNC_ANNOUNCECLUSTERDEPLOYMENT = "announceClusterDeployment";

    public static final String FUNC_ANNOUNCEDEPLOYMENTEND = "announceDeploymentEnd";

    public static final Event SERVICECREATED_EVENT = new Event("ServiceCreated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>(true) {}, new TypeReference<Bytes32>(true) {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event SERVICERELEASED_EVENT = new Event("ServiceReleased", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>(true) {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<DynamicBytes>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event SERVICEDEPLOYMENT_EVENT = new Event("ServiceDeployment", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>(true) {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event CLUSTERSERVICEDEPLOYMENT_EVENT = new Event("ClusterServiceDeployment", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>(true) {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<DynamicBytes>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event CLUSTERSERVICEDEPLOYMENTEND_EVENT = new Event("ClusterServiceDeploymentEnd", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>(true) {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<DynamicBytes>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event SERVICEDEPLOYMENTEND_EVENT = new Event("ServiceDeploymentEnd", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>(true) {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}));
    ;

    protected static final HashMap<String, String> _addresses;

    static {
        _addresses = new HashMap<String, String>();
        _addresses.put("1548030495818", "0xd35284B7644732094338559c13a5CE880D247D37");
        _addresses.put("1548179226677", "0xd35284B7644732094338559c13a5CE880D247D37");
        _addresses.put("1543166959423", "0xdd934d1dfb15be4f3e5a50199963ead449392bae");
        _addresses.put("1542660356610", "0x4a30c74760864d53b72d0ee58933713e1e3460b1");
        _addresses.put("1538948396210", "0xd58d24b40b96b40dc9bed699b032adb7608b779c");
        _addresses.put("1547253445583", "0x1fD5454E4BE757eBbb9698a65d417A632eD8E0A9");
        _addresses.put("1540910817715", "0x902edbee0906bbecf149a9756c9418217c11ea3b");
        _addresses.put("1540914412800", "0xdd934d1dfb15be4f3e5a50199963ead449392bae");
        _addresses.put("1547950005495", "0xd35284B7644732094338559c13a5CE880D247D37");
        _addresses.put("1547668249195", "0xd35284B7644732094338559c13a5CE880D247D37");
        _addresses.put("1542029033973", "0xdd934d1dfb15be4f3e5a50199963ead449392bae");
        _addresses.put("1543166567414", "0xd4d7aa7f9f4f1e3175576089836bb0cedf859030");
        _addresses.put("1337", "0x0530420575bcbaacdfc0377ca3aa6f40c542a30f");
        _addresses.put("1544647115488", "0xdd934d1dfb15be4f3e5a50199963ead449392bae");
        _addresses.put("1547669508831", "0xd35284B7644732094338559c13a5CE880D247D37");
        _addresses.put("1542106474778", "0xfd44f06fc6fe0604898d51c4fe97964b09263ffc");
        _addresses.put("1548176445685", "0xd35284B7644732094338559c13a5CE880D247D37");
        _addresses.put("1537802983234", "0x55226bf1e5f53144cd6501aca6cbc8ba337c96e4");
        _addresses.put("1547753439529", "0xd35284B7644732094338559c13a5CE880D247D37");
        _addresses.put("1547948957914", "0xd35284B7644732094338559c13a5CE880D247D37");
        _addresses.put("1547124773774", "0xb4a46ddf426e1764c690e9f5bac254b0f66b4d15");
        _addresses.put("1543176208799", "0xdd934d1dfb15be4f3e5a50199963ead449392bae");
        _addresses.put("1547907420602", "0xd35284B7644732094338559c13a5CE880D247D37");
        _addresses.put("1547650799067", "0xdd934d1DFB15Be4f3E5a50199963EAd449392baE");
        _addresses.put("1543176413402", "0xdd934d1dfb15be4f3e5a50199963ead449392bae");
        _addresses.put("1548030691435", "0xd35284B7644732094338559c13a5CE880D247D37");
        _addresses.put("1547754447366", "0xd35284B7644732094338559c13a5CE880D247D37");
        _addresses.put("1547665181270", "0xd35284B7644732094338559c13a5CE880D247D37");
        _addresses.put("1543180431517", "0xdd934d1dfb15be4f3e5a50199963ead449392bae");
        _addresses.put("1544650273884", "0xdd934d1dfb15be4f3e5a50199963ead449392bae");
        _addresses.put("1541606582953", "0xdd934d1dfb15be4f3e5a50199963ead449392bae");
        _addresses.put("1543183353235", "0xdd934d1dfb15be4f3e5a50199963ead449392bae");
        _addresses.put("1543176596896", "0xdd934d1dfb15be4f3e5a50199963ead449392bae");
        _addresses.put("1544646383682", "0xdd934d1dfb15be4f3e5a50199963ead449392bae");
        _addresses.put("1542554349057", "0xdd934d1dfb15be4f3e5a50199963ead449392bae");
        _addresses.put("1541421861694", "0xdd934d1dfb15be4f3e5a50199963ead449392bae");
        _addresses.put("1542788782705", "0xdd934d1dfb15be4f3e5a50199963ead449392bae");
        _addresses.put("1547671518090", "0xd35284B7644732094338559c13a5CE880D247D37");
        _addresses.put("1547671253677", "0xd35284B7644732094338559c13a5CE880D247D37");
        _addresses.put("1541429234327", "0xdd934d1dfb15be4f3e5a50199963ead449392bae");
        _addresses.put("1547665092551", "0xd35284B7644732094338559c13a5CE880D247D37");
        _addresses.put("1547761267341", "0xd35284B7644732094338559c13a5CE880D247D37");
        _addresses.put("1543173884204", "0xdd934d1dfb15be4f3e5a50199963ead449392bae");
        _addresses.put("1543175223552", "0xdd934d1dfb15be4f3e5a50199963ead449392bae");
        _addresses.put("1538963171946", "0x8e5896c24dadcc8eccb24409b8b2f8fa0843fe60");
        _addresses.put("1547668297815", "0xd35284B7644732094338559c13a5CE880D247D37");
        _addresses.put("1547671600204", "0xd35284B7644732094338559c13a5CE880D247D37");
        _addresses.put("1547136692373", "0xdd934d1dfb15be4f3e5a50199963ead449392bae");
        _addresses.put("1547668545717", "0xd35284B7644732094338559c13a5CE880D247D37");
        _addresses.put("1543180833463", "0xdd934d1dfb15be4f3e5a50199963ead449392bae");
        _addresses.put("1547650997683", "0xdd934d1DFB15Be4f3E5a50199963EAd449392baE");
        _addresses.put("1543175929774", "0xdd934d1dfb15be4f3e5a50199963ead449392bae");
        _addresses.put("1547753664593", "0xd35284B7644732094338559c13a5CE880D247D37");
        _addresses.put("1547663533027", "0xdd934d1DFB15Be4f3E5a50199963EAd449392baE");
        _addresses.put("1543173626032", "0xdd934d1dfb15be4f3e5a50199963ead449392bae");
        _addresses.put("1547671405647", "0xd35284B7644732094338559c13a5CE880D247D37");
        _addresses.put("1542106226176", "0xdd934d1dfb15be4f3e5a50199963ead449392bae");
        _addresses.put("1547669054084", "0xd35284B7644732094338559c13a5CE880D247D37");
        _addresses.put("1544646252041", "0xdd934d1dfb15be4f3e5a50199963ead449392bae");
        _addresses.put("1542729634872", "0x97a7230a500d63bb2e015e184033052ae7d5b0e6");
        _addresses.put("1547671862981", "0xd35284B7644732094338559c13a5CE880D247D37");
        _addresses.put("1548071284377", "0xd35284B7644732094338559c13a5CE880D247D37");
        _addresses.put("1547134394368", "0xdd934d1dfb15be4f3e5a50199963ead449392bae");
        _addresses.put("1547669426929", "0xd35284B7644732094338559c13a5CE880D247D37");
        _addresses.put("1547649230996", "0xdd934d1DFB15Be4f3E5a50199963EAd449392baE");
        _addresses.put("1547669623311", "0xd35284B7644732094338559c13a5CE880D247D37");
        _addresses.put("456719", "0x97c4cf2c2318171aa9c075bf66b27be57321aeee");
        _addresses.put("1547137763380", "0xdd934d1dfb15be4f3e5a50199963ead449392bae");
        _addresses.put("1547747212786", "0xd35284B7644732094338559c13a5CE880D247D37");
        _addresses.put("1538343946582", "0xa98fab7089a9f53300febbe1300ebfa45e8b75ff");
        _addresses.put("1543182664634", "0xdd934d1dfb15be4f3e5a50199963ead449392bae");
        _addresses.put("1537881365143", "0x531b6526887966d8f5f85ed57c82b56a2935c7fd");
        _addresses.put("1541353003952", "0xdd934d1dfb15be4f3e5a50199963ead449392bae");
        _addresses.put("1548178066194", "0xd35284B7644732094338559c13a5CE880D247D37");
        _addresses.put("1542059718816", "0xdd934d1dfb15be4f3e5a50199963ead449392bae");
        _addresses.put("1542059511560", "0xdd934d1dfb15be4f3e5a50199963ead449392bae");
        _addresses.put("1541006760161", "0x939f5660e8c88af96aeda17887ece6e2c04901a8");
        _addresses.put("1547949424396", "0xd35284B7644732094338559c13a5CE880D247D37");
        _addresses.put("1543178229634", "0xdd934d1dfb15be4f3e5a50199963ead449392bae");
        _addresses.put("1547754544246", "0xd35284B7644732094338559c13a5CE880D247D37");
        _addresses.put("1547563145556", "0xe7bEa877130cd6d1c6A1Bb178913900439ed43fF");
    }

    @Deprecated
    protected ServiceRegistry(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected ServiceRegistry(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected ServiceRegistry(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected ServiceRegistry(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteFunctionCall<Tuple2<String, byte[]>> services(byte[] param0) {
        final Function function = new Function(FUNC_SERVICES, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Bytes32>() {}));
        return new RemoteFunctionCall<Tuple2<String, byte[]>>(function,
                new Callable<Tuple2<String, byte[]>>() {
                    @Override
                    public Tuple2<String, byte[]> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<String, byte[]>(
                                (String) results.get(0).getValue(), 
                                (byte[]) results.get(1).getValue());
                    }
                });
    }

    public RemoteFunctionCall<Tuple3<BigInteger, BigInteger, BigInteger>> serviceVersions(byte[] param0, BigInteger param1) {
        final Function function = new Function(FUNC_SERVICEVERSIONS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(param0), 
                new org.web3j.abi.datatypes.generated.Uint256(param1)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple3<BigInteger, BigInteger, BigInteger>>(function,
                new Callable<Tuple3<BigInteger, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple3<BigInteger, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple3<BigInteger, BigInteger, BigInteger>(
                                (BigInteger) results.get(0).getValue(), 
                                (BigInteger) results.get(1).getValue(), 
                                (BigInteger) results.get(2).getValue());
                    }
                });
    }

    public RemoteFunctionCall<String> userRegistry() {
        final Function function = new Function(FUNC_USERREGISTRY, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public List<ServiceCreatedEventResponse> getServiceCreatedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(SERVICECREATED_EVENT, transactionReceipt);
        ArrayList<ServiceCreatedEventResponse> responses = new ArrayList<ServiceCreatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ServiceCreatedEventResponse typedResponse = new ServiceCreatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.nameHash = (byte[]) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.author = (byte[]) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.timestamp = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ServiceCreatedEventResponse> serviceCreatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, ServiceCreatedEventResponse>() {
            @Override
            public ServiceCreatedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(SERVICECREATED_EVENT, log);
                ServiceCreatedEventResponse typedResponse = new ServiceCreatedEventResponse();
                typedResponse.log = log;
                typedResponse.nameHash = (byte[]) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.author = (byte[]) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.timestamp = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ServiceCreatedEventResponse> serviceCreatedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(SERVICECREATED_EVENT));
        return serviceCreatedEventFlowable(filter);
    }

    public List<ServiceReleasedEventResponse> getServiceReleasedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(SERVICERELEASED_EVENT, transactionReceipt);
        ArrayList<ServiceReleasedEventResponse> responses = new ArrayList<ServiceReleasedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ServiceReleasedEventResponse typedResponse = new ServiceReleasedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.nameHash = (byte[]) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.versionMajor = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.versionMinor = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.versionPatch = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.hash = (byte[]) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse.timestamp = (BigInteger) eventValues.getNonIndexedValues().get(4).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ServiceReleasedEventResponse> serviceReleasedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, ServiceReleasedEventResponse>() {
            @Override
            public ServiceReleasedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(SERVICERELEASED_EVENT, log);
                ServiceReleasedEventResponse typedResponse = new ServiceReleasedEventResponse();
                typedResponse.log = log;
                typedResponse.nameHash = (byte[]) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.versionMajor = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.versionMinor = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse.versionPatch = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse.hash = (byte[]) eventValues.getNonIndexedValues().get(3).getValue();
                typedResponse.timestamp = (BigInteger) eventValues.getNonIndexedValues().get(4).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ServiceReleasedEventResponse> serviceReleasedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(SERVICERELEASED_EVENT));
        return serviceReleasedEventFlowable(filter);
    }

    public List<ServiceDeploymentEventResponse> getServiceDeploymentEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(SERVICEDEPLOYMENT_EVENT, transactionReceipt);
        ArrayList<ServiceDeploymentEventResponse> responses = new ArrayList<ServiceDeploymentEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ServiceDeploymentEventResponse typedResponse = new ServiceDeploymentEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.nameHash = (byte[]) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.className = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.versionMajor = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.versionMinor = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.versionPatch = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse.nodeId = (String) eventValues.getNonIndexedValues().get(4).getValue();
            typedResponse.timestamp = (BigInteger) eventValues.getNonIndexedValues().get(5).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ServiceDeploymentEventResponse> serviceDeploymentEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, ServiceDeploymentEventResponse>() {
            @Override
            public ServiceDeploymentEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(SERVICEDEPLOYMENT_EVENT, log);
                ServiceDeploymentEventResponse typedResponse = new ServiceDeploymentEventResponse();
                typedResponse.log = log;
                typedResponse.nameHash = (byte[]) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.className = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.versionMajor = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse.versionMinor = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse.versionPatch = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
                typedResponse.nodeId = (String) eventValues.getNonIndexedValues().get(4).getValue();
                typedResponse.timestamp = (BigInteger) eventValues.getNonIndexedValues().get(5).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ServiceDeploymentEventResponse> serviceDeploymentEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(SERVICEDEPLOYMENT_EVENT));
        return serviceDeploymentEventFlowable(filter);
    }

    public List<ClusterServiceDeploymentEventResponse> getClusterServiceDeploymentEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(CLUSTERSERVICEDEPLOYMENT_EVENT, transactionReceipt);
        ArrayList<ClusterServiceDeploymentEventResponse> responses = new ArrayList<ClusterServiceDeploymentEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ClusterServiceDeploymentEventResponse typedResponse = new ClusterServiceDeploymentEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.nameHash = (byte[]) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.versionMajor = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.versionMinor = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.versionPatch = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.hash = (byte[]) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse.timestamp = (BigInteger) eventValues.getNonIndexedValues().get(4).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ClusterServiceDeploymentEventResponse> clusterServiceDeploymentEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, ClusterServiceDeploymentEventResponse>() {
            @Override
            public ClusterServiceDeploymentEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(CLUSTERSERVICEDEPLOYMENT_EVENT, log);
                ClusterServiceDeploymentEventResponse typedResponse = new ClusterServiceDeploymentEventResponse();
                typedResponse.log = log;
                typedResponse.nameHash = (byte[]) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.versionMajor = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.versionMinor = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse.versionPatch = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse.hash = (byte[]) eventValues.getNonIndexedValues().get(3).getValue();
                typedResponse.timestamp = (BigInteger) eventValues.getNonIndexedValues().get(4).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ClusterServiceDeploymentEventResponse> clusterServiceDeploymentEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(CLUSTERSERVICEDEPLOYMENT_EVENT));
        return clusterServiceDeploymentEventFlowable(filter);
    }

    public List<ClusterServiceDeploymentEndEventResponse> getClusterServiceDeploymentEndEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(CLUSTERSERVICEDEPLOYMENTEND_EVENT, transactionReceipt);
        ArrayList<ClusterServiceDeploymentEndEventResponse> responses = new ArrayList<ClusterServiceDeploymentEndEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ClusterServiceDeploymentEndEventResponse typedResponse = new ClusterServiceDeploymentEndEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.nameHash = (byte[]) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.versionMajor = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.versionMinor = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.versionPatch = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.hash = (byte[]) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse.timestamp = (BigInteger) eventValues.getNonIndexedValues().get(4).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ClusterServiceDeploymentEndEventResponse> clusterServiceDeploymentEndEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, ClusterServiceDeploymentEndEventResponse>() {
            @Override
            public ClusterServiceDeploymentEndEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(CLUSTERSERVICEDEPLOYMENTEND_EVENT, log);
                ClusterServiceDeploymentEndEventResponse typedResponse = new ClusterServiceDeploymentEndEventResponse();
                typedResponse.log = log;
                typedResponse.nameHash = (byte[]) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.versionMajor = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.versionMinor = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse.versionPatch = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse.hash = (byte[]) eventValues.getNonIndexedValues().get(3).getValue();
                typedResponse.timestamp = (BigInteger) eventValues.getNonIndexedValues().get(4).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ClusterServiceDeploymentEndEventResponse> clusterServiceDeploymentEndEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(CLUSTERSERVICEDEPLOYMENTEND_EVENT));
        return clusterServiceDeploymentEndEventFlowable(filter);
    }

    public List<ServiceDeploymentEndEventResponse> getServiceDeploymentEndEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(SERVICEDEPLOYMENTEND_EVENT, transactionReceipt);
        ArrayList<ServiceDeploymentEndEventResponse> responses = new ArrayList<ServiceDeploymentEndEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ServiceDeploymentEndEventResponse typedResponse = new ServiceDeploymentEndEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.nameHash = (byte[]) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.className = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.versionMajor = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.versionMinor = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.versionPatch = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse.nodeId = (String) eventValues.getNonIndexedValues().get(4).getValue();
            typedResponse.timestamp = (BigInteger) eventValues.getNonIndexedValues().get(5).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ServiceDeploymentEndEventResponse> serviceDeploymentEndEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, ServiceDeploymentEndEventResponse>() {
            @Override
            public ServiceDeploymentEndEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(SERVICEDEPLOYMENTEND_EVENT, log);
                ServiceDeploymentEndEventResponse typedResponse = new ServiceDeploymentEndEventResponse();
                typedResponse.log = log;
                typedResponse.nameHash = (byte[]) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.className = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.versionMajor = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse.versionMinor = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse.versionPatch = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
                typedResponse.nodeId = (String) eventValues.getNonIndexedValues().get(4).getValue();
                typedResponse.timestamp = (BigInteger) eventValues.getNonIndexedValues().get(5).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ServiceDeploymentEndEventResponse> serviceDeploymentEndEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(SERVICEDEPLOYMENTEND_EVENT));
        return serviceDeploymentEndEventFlowable(filter);
    }

    public RemoteFunctionCall<byte[]> stringHash(String name) {
        final Function function = new Function(FUNC_STRINGHASH, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(name)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteFunctionCall<Boolean> nameIsAvailable(String serviceName) {
        final Function function = new Function(FUNC_NAMEISAVAILABLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(serviceName)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<String> hashToName(byte[] hashOfName) {
        final Function function = new Function(FUNC_HASHTONAME, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(hashOfName)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<TransactionReceipt> register(String serviceName, byte[] authorName) {
        final Function function = new Function(
                FUNC_REGISTER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(serviceName), 
                new org.web3j.abi.datatypes.generated.Bytes32(authorName)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> delegatedRegister(String serviceName, byte[] authorName, String consentee, byte[] consentSignature) {
        final Function function = new Function(
                FUNC_DELEGATEDREGISTER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(serviceName), 
                new org.web3j.abi.datatypes.generated.Bytes32(authorName), 
                new org.web3j.abi.datatypes.Address(consentee), 
                new org.web3j.abi.datatypes.DynamicBytes(consentSignature)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> release(String serviceName, byte[] authorName, BigInteger versionMajor, BigInteger versionMinor, BigInteger versionPatch, byte[] hash) {
        final Function function = new Function(
                FUNC_RELEASE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(serviceName), 
                new org.web3j.abi.datatypes.generated.Bytes32(authorName), 
                new org.web3j.abi.datatypes.generated.Uint256(versionMajor), 
                new org.web3j.abi.datatypes.generated.Uint256(versionMinor), 
                new org.web3j.abi.datatypes.generated.Uint256(versionPatch), 
                new org.web3j.abi.datatypes.DynamicBytes(hash)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> delegatedRelease(String serviceName, byte[] authorName, BigInteger versionMajor, BigInteger versionMinor, BigInteger versionPatch, byte[] hash, String consentee, byte[] consentSignature) {
        final Function function = new Function(
                FUNC_DELEGATEDRELEASE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(serviceName), 
                new org.web3j.abi.datatypes.generated.Bytes32(authorName), 
                new org.web3j.abi.datatypes.generated.Uint256(versionMajor), 
                new org.web3j.abi.datatypes.generated.Uint256(versionMinor), 
                new org.web3j.abi.datatypes.generated.Uint256(versionPatch), 
                new org.web3j.abi.datatypes.DynamicBytes(hash), 
                new org.web3j.abi.datatypes.Address(consentee), 
                new org.web3j.abi.datatypes.DynamicBytes(consentSignature)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> announceDeployment(String serviceName, String className, BigInteger versionMajor, BigInteger versionMinor, BigInteger versionPatch, String nodeId) {
        final Function function = new Function(
                FUNC_ANNOUNCEDEPLOYMENT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(serviceName), 
                new org.web3j.abi.datatypes.Utf8String(className), 
                new org.web3j.abi.datatypes.generated.Uint256(versionMajor), 
                new org.web3j.abi.datatypes.generated.Uint256(versionMinor), 
                new org.web3j.abi.datatypes.generated.Uint256(versionPatch), 
                new org.web3j.abi.datatypes.Utf8String(nodeId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> announceClusterDeployment(String serviceName, BigInteger versionMajor, BigInteger versionMinor, BigInteger versionPatch, byte[] hash) {
        final Function function = new Function(
                FUNC_ANNOUNCECLUSTERDEPLOYMENT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(serviceName), 
                new org.web3j.abi.datatypes.generated.Uint256(versionMajor), 
                new org.web3j.abi.datatypes.generated.Uint256(versionMinor), 
                new org.web3j.abi.datatypes.generated.Uint256(versionPatch), 
                new org.web3j.abi.datatypes.DynamicBytes(hash)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> announceDeploymentEnd(String serviceName, BigInteger versionMajor, BigInteger versionMinor, BigInteger versionPatch, byte[] hash) {
        final Function function = new Function(
                FUNC_ANNOUNCEDEPLOYMENTEND, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(serviceName), 
                new org.web3j.abi.datatypes.generated.Uint256(versionMajor), 
                new org.web3j.abi.datatypes.generated.Uint256(versionMinor), 
                new org.web3j.abi.datatypes.generated.Uint256(versionPatch), 
                new org.web3j.abi.datatypes.DynamicBytes(hash)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static ServiceRegistry load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new ServiceRegistry(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static ServiceRegistry load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new ServiceRegistry(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static ServiceRegistry load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new ServiceRegistry(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static ServiceRegistry load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new ServiceRegistry(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<ServiceRegistry> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, String userRegistryAddress) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(userRegistryAddress)));
        return deployRemoteCall(ServiceRegistry.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static RemoteCall<ServiceRegistry> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, String userRegistryAddress) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(userRegistryAddress)));
        return deployRemoteCall(ServiceRegistry.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<ServiceRegistry> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, String userRegistryAddress) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(userRegistryAddress)));
        return deployRemoteCall(ServiceRegistry.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<ServiceRegistry> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, String userRegistryAddress) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(userRegistryAddress)));
        return deployRemoteCall(ServiceRegistry.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    protected String getStaticDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    public static String getPreviouslyDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    public static class ServiceCreatedEventResponse extends BaseEventResponse {
        public byte[] nameHash;

        public byte[] author;

        public BigInteger timestamp;
    }

    public static class ServiceReleasedEventResponse extends BaseEventResponse {
        public byte[] nameHash;

        public BigInteger versionMajor;

        public BigInteger versionMinor;

        public BigInteger versionPatch;

        public byte[] hash;

        public BigInteger timestamp;
    }

    public static class ServiceDeploymentEventResponse extends BaseEventResponse {
        public byte[] nameHash;

        public String className;

        public BigInteger versionMajor;

        public BigInteger versionMinor;

        public BigInteger versionPatch;

        public String nodeId;

        public BigInteger timestamp;
    }

    public static class ClusterServiceDeploymentEventResponse extends BaseEventResponse {
        public byte[] nameHash;

        public BigInteger versionMajor;

        public BigInteger versionMinor;

        public BigInteger versionPatch;

        public byte[] hash;

        public BigInteger timestamp;
    }

    public static class ClusterServiceDeploymentEndEventResponse extends BaseEventResponse {
        public byte[] nameHash;

        public BigInteger versionMajor;

        public BigInteger versionMinor;

        public BigInteger versionPatch;

        public byte[] hash;

        public BigInteger timestamp;
    }

    public static class ServiceDeploymentEndEventResponse extends BaseEventResponse {
        public byte[] nameHash;

        public String className;

        public BigInteger versionMajor;

        public BigInteger versionMinor;

        public BigInteger versionPatch;

        public String nodeId;

        public BigInteger timestamp;
    }
}
