plugins {
    id 'java-library'
    id 'application'
    // maven plugin is used to create .pom files
    id 'maven-publish'
}

group = 'i5'
archivesBaseName = 'las2peer-rest-mapper'
version = "${project.property('las2peer.version')}"
sourceCompatibility = "${project.property('java.version')}"
targetCompatibility = "${project.property('java.version')}"

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()

    // DBIS Archiva
    maven {
        url "${project.property('dbis.archiva.url')}"
    }
}

compileJava {
    options.compilerArgs += ["-XDignore.symbol.file"]
    options.fork = true
    options.forkOptions.executable = "javac"
}

javadoc {
    destinationDir = file("$projectDir/export/javadoc")
}

build.dependsOn "javadoc"

dependencies {
    // Use JUnit test framework.
    testImplementation "junit:junit:${project.property('junit.version')}"
    
    api project(":core")

    api "io.swagger:swagger-jersey2-jaxrs:1.5.17"
    api "org.glassfish.jersey.core:jersey-server:${project.property('jersey.version')}"
    api "org.glassfish.jersey.core:jersey-common:${project.property('jersey.version')}"
    api "org.glassfish.jersey.media:jersey-media-json-jackson:${project.property('jersey.version')}"
    api "javax.ws.rs:javax.ws.rs-api:2.0.1"
    api "org.glassfish.jersey.media:jersey-media-multipart:${project.property('jersey.version')}"
    api "javax.xml.bind:jaxb-api:2.3.1"
    api "org.glassfish.jaxb:jaxb-runtime:2.3.1"
    api "org.glassfish.jersey.inject:jersey-hk2:${project.property('jersey.version')}"
}

// put all .jar files into export/jars folder
tasks.withType(Jar) {
    destinationDir = file("$projectDir/export/jars")
}

jar {
    manifest {
        attributes("Implementation-Version": "${project.property('las2peer.version')}",
                   "Class-Path": configurations.runtimeClasspath.files.collect { it.getName() }.join(" "))
    }
}

clean.doLast {
    file("export").deleteDir()
}

// In .pom file, use "runtime" scope for dependencies declared with api configuration (instead of "compile" scope).
// Also las2peer (core) should be a runtime dependency.
publishing.publications.all {
    pom.withXml {
        asNode().dependencies."*".findAll() {
            it.scope.text() == "compile" && project.configurations.api.allDependencies.find { dep -> dep.name == it.artifactId.text() }
        }.each { it.scope*.value = "runtime"}
        asNode().dependencies."*".findAll() {
            it.artifactId.text() == "las2peer"
        }.each { it.scope*.value = "runtime"}
    }
}

publishing {
    publications {
        restmapper(MavenPublication) {
            from components.java
            artifact jar
            pom {
                artifactId "las2peer-rest-mapper"
                packaging "jar"
            }
        }
    }
}