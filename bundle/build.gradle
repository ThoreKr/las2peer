plugins {
    id 'java'
    id 'application'
    // plugin for building the las2peer bundle jar
    id "com.github.johnrengelman.shadow" version "5.0.0"
    // maven plugin is used to create .pom files
    id 'maven-publish'
}

def las2peerRevision = "${project.property('las2peer.revision')}"
def las2peerBuildNumber = "${project.property('las2peer.build.number')}"
def las2peerRelease = System.env.LAS2PEER_RELEASE != null
def las2peerVersion = las2peerRelease ? "$las2peerRevision.$las2peerBuildNumber" : "$las2peerRevision-SNAPSHOT"

group = 'i5'
archivesBaseName = 'las2peer-bundle'
version = las2peerVersion
mainClassName = "i5.las2peer.tools.L2pNodeLauncher"
sourceCompatibility = "${project.property('java.version')}"
targetCompatibility = "${project.property('java.version')}"

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()

    // DBIS Archiva
    maven {
        url "${project.property('dbis.archiva.url')}"
    }
}

dependencies {
    compile project(":core")
    compile project(":restmapper")
    compile project(":webconnector")
}

// put all .jar files into export/jars folder
tasks.withType(Jar) {
    destinationDir = file("$projectDir/export/jars")
}

jar {
    manifest {
        attributes "Main-Class": "i5.las2peer.tools.L2pNodeLauncher"
    }
}

// las2peer bundle jar
shadowJar {
    mergeServiceFiles() 
}

clean.doLast {
    file("export").deleteDir()
}

/*publishing {
    publications {
        bundle(MavenPublication) {
            pom {
                artifactId "las2peer-bundle"
                packaging "jar"
            }
        }
    }
}*/